#pragma once

#include <list>
#include <pthread.h>
#include "slCThreadImplBase.hp"

namespace sokira
{
	namespace le
	{

class CThreadImplPosix : public CThreadImplBase
{
	public:
		inline CThreadImplPosix(const TCFunction<>& threadProc,
								const CString& threadName) :
			CThreadImplBase(threadProc, threadName)
		{

		}

		inline CThreadImplPosix(pthread_t id) :
			mThreadID(id)
		{

		}

		virtual void start();

		static CThreadImplBase* thread();

		static inline void sleep(UInt32 milliSeconds)
		{
			::usleep(milliSeconds * 1000); // Microseconds
		}

	private:
		pthread_t mThreadID;
};


typedef CThreadImplPosix CThreadImpl;
typedef pthread_t TThreadID;

	} // namespace le
} // namespace sokira
